<?php
	class url
	{
		private static $_objectName;
		private static $_methodName;
		private static $_args = array();
		
		private static $_defMethodName = "defaultAction"; //name of method to call if methodName is NULL
		private static $_methodNamePrefix = "action";
		private static $_objectNameSuffix = "Controller";
		
		public static function processUrl()
		{
			self::parseUrl();
			self::executeUrl();
		}
		
		public static function getObjectName()
		{
			return self::$_objectName;
		}
		
		private function parseUrl()
		{
			$attrs = explode("/", $_SERVER['REQUEST_URI']);
			
			/*echo "Debug: sizeof attrs is: ".sizeof($attrs)."<br>";
			foreach($attrs as $key=>$value)
				echo $key."=>".$value."<br>";*/
			
			if(sizeof($attrs) > 2)
				self::$_objectName = $attrs[2];
			
			if(sizeof($attrs) > 3)
				self::$_methodName = $attrs[3];
			
			if(sizeof($attrs) > 4)
				for($i = 4; $i < sizeof($attrs); $i++)
					self::$_args[$i - 4] = $attrs[$i];
		}
		
		private function executeUrl()
		{
			if(self::$_objectName === NULL)
				return;
			
			$object_instance = Sys::newInstance(self::$_objectName.self::$_objectNameSuffix);
			
			if(self::$_methodName === NULL)
			{
				self::callMethod($object_instance, self::_defMethodName, self::$_defMethodName." is not defined");
				return;
			}
			
			self::callMethod($object_instance, self::$_methodNamePrefix.self::$_methodName);
		}
		
		private function callMethod($obj_inst, $method, $err_msg = NULL)
		{
			/*if(!class_exists($obj_inst))
				trigger_error("Undefined object");*/
			if($err_msg === NULL)
				$err_msg = "Call to undefined method";
			if(!method_exists($obj_inst, $method))
					trigger_error($err_msg);
			$obj_inst->$method();
		}
	}
?>
