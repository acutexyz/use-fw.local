<?php
	class UserController
	{	
		#Sign in form fields parameters
		private $_signinFields = array(
			"identity" => array("req", "email"), 
			"password" => array("req"), 
			"remembered"
		);
		
		public function actionSignin()
		{
			if(isset($_POST['user_auth'])) 
			{
				$filter = new filter($this->_signinFields, "user_auth");
				if($filter->isWrong()) {
					out::writeViewTo("signin_form", "content", $filter->errors);
				}
				else
				{
					$result = auth::getInstance()->signIn($filter->identity, $filter->password, $filter->remembered);
					$this->handleSignin($result);
				}
			}
			else 
			{
				auth::getInstance()->saveReturnUrl();
				out::writeViewTo("signin_form", "content");
			}
		}
		
		public function actionSignout()
		{
			auth::getInstance()->saveReturnUrl();
			
			auth::getInstance()->signOut();
			
			header("Location: ".auth::getInstance()->getReturnUrl());
			exit;
		}
		
		private function handleSignin($result)
		{
			if($result == 1) {
				out::writeViewTo("signin_form", "content", array("password" => "Wrong password"));
			}
			else if($result == 2) {
				out::writeViewTo("signin_form", "content", array("identity" => "Non-existent account"));
			}
			else 
			{
				$prev_page = auth::getInstance()->getReturnUrl();
				if($prev_page) {
					header("Location: ".$prev_page);
					exit;
				}
			}
		}
		
		public function actionRegister()
		{
			if(isset($_POST['user']))
			{
				$user = new UserModel("user");
				
				if($user->isWrong())
					out::writeViewTo("reg-form", "content", $user->errors);
				else {
					$user->save(); //this requires states
				}
			}
		}
	}
?>
